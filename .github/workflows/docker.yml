name: Docker

on:
  push:
    branches:
      - main
    paths:
      - Dockerfile
  pull_request:
    types:
      - opened
      - reopened
    branches:
      - main
    paths:
      - Dockerfile

jobs:
  docker:
    name: Build, Publish, and Sign Docker image
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout GitHub repository
        uses: actions/checkout@v3

      - name: Install Cosign
        if: github.event_name == 'push'
        uses: sigstore/cosign-installer@v3.0.1

      - name: Generate Docker-compliant image name from repository
        run: echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY,,} | sed 's/docker-//')" | tee -a $GITHUB_ENV

      - name: Parse Caddy version from Dockerfile
        run: echo "CADDY_VERSION=$(grep -Eo 'caddy:[0-9]+\.[0-9]+\.[0-9]+$' Dockerfile | cut -d ':' -f2)" | tee -a $GITHUB_ENV

      - name: Generate Docker metadata with Caddy version
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=v${{ env.CADDY_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ env.CADDY_VERSION }}
            type=semver,pattern={{major}},value=v${{ env.CADDY_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.metadata.outputs.tags }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

      - name: Sign Docker images
        if: github.event_name == 'push'
        run: |
          cosign sign --yes --recursive -a CI=true --key env://COSIGN_PRIVATE_KEY \
            "${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}"
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Create and push Git version tag
        if: github.event_name == 'push'
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          custom_tag: ${{ env.CADDY_VERSION }}
          tag_prefix: v
